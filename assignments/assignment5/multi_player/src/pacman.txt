Pacman v1 Protocol Specification
=================================

*giving unsigned integer

1. Terminology
===============

This specification uses the terms MUST, SHOULD and MAY as defined in 
RFC 2119 [rfc2119]

The pacman v1 protocol runs over both UDP and TCP, using a well known ports of 5432 and 5433 respectively.
There are 12 message types: INIT
                            FOREIGN_PACMAN_ARRIVED
                            FOREIGN_PACMAN_LEFT
                            FOREIGN_PACMAN_DIED
                            PACMAN_GO_HOME
                            PACMAN_UPDATE
                            GHOST_UPDATE
                            FOREIGN_PACMAN_ATE_GHOST
                            EAT
                            SCORE_UPDATE
                            LIVES_UPDATE
                            STATUS_UPDATE

There are 4 message priority levels: 0, 1

There are 4 quadrants to a maze numbered: 0, 1, 2, 3

There are 12 map items.

There are 4 directions


1.1 Priority level
===================

Each message type MUST have a priority level attached to it
which ranges from 0-1 where 0 signifies a very important high priority change and 
1 is a low priority change. If the message has a priority level of 0, it
MUST be sent over TCP else it SHOULD be sent over UDP. It MUST continue to send
the high priority messages until it has been correctly received by the other side.

  1.1.1 Determining a messages priority level
  ===========================================

  In order to determine a messages priority level, there are conditions that
  must be met. These are outlined below:

  Priority level :         Condition            :   Protocol used
        0        : This message MUST be sent    :       TCP
                  and is game changing.   
                    
        1        : This message SHOULD be sent  :       UDP
                  but it is not game changing. 

  1.1.2 Priority level 0
  ======================

  If a message has a priority level 0, there will be a sequence number attached to its header.
  If there are any priority level 0 messages that havent been received correctly, then the 
  sequence number is incremented from the last priority level 0 message.

  Sequence numbers begin from the decimal number 1
  They are encoded in 3 bit binary.

                   0 1 2 ..........   
                  +-+-+-+-+-+-+-+-+
                  |  S  | Message |
                  +-+-+-+-+-+-+-+-+
                  S = Sequence number

  Format:  ______________________
          | Sequence | Message  |
          |  Number  | and data |
          -----------------------
  
  1.1.3 Priority level 1
  ======================

  If a message has a priority level 1. There will be a sequenece number attached to its header.
  The sequenece number will be the last priority level 0 messages sequence number and will
  increment until the priority level 0 message has been sent. 



  For example, if we are sending a priority level 1 message and the last priority level 0 message
  had a sequence number of 1, the sequence number of the priority level 1 message will be 1.

  A priority level 1 message will not be processed until a priority level 0 message before it 
  has been processed. Since priority level 0 messages SHOULD arrive on time, there SHOULD be no delays.

  If there are no priority level 0 messages that haven't been recieved correctly, then this value
  will be 0.

  Sequence numbers begin from the decimal number 1
  They are encoded in 3 bit binary.

                   0 1 2 ..........   
                  +-+-+-+-+-+-+-+-+
                  |  S  | Message |
                  +-+-+-+-+-+-+-+-+
                  S = Sequence number

  Format:  ______________________
          | Sequence | Message  |
          |  Number  | and data |
          -----------------------
 

1.2 Quadrants
==============

The maze (of size 84 x 31) on each computer is split into quadrants 
(of size 42x15). They are numbered as such:
____________________  
|        |         |   
|   0    |    1    |
|________|_________|
|        |         |
|   2    |    3    |
|________|_________|

All message types relating to the maze MUST have a quandrant number associated to it.
During initial connection, all 4 quadrants MUST be sent using TCP protocol.
When a computer is controlling their respective pacman, it MUST 
continuously send a sequenece of messages that are taking place in that 
quandrant of the maze. It SHOULD also send messages if a change took place
in any other quandrant such as ghost has changed direction. 

Note that whenever we send update message from a quadrant, the other side SHOULD
be able to use the messages and build the full correct maze.
In addition, the number of quandrants sent is not limited, it SHOULD be able to send 
multiple quandrants if needed.


1.3 Map items 
==============

Map items are used to create and build a maze line by line.
Map items are encoded using 4 bit binary.
Each map item has a decimal value as follows:
                Item   :  Decimal value  :  Binary value
                " /-"  :        0        :     0000
                "-/ "  :        1        :     0001
                "---"  :        2        :     0010
                "-\\ " :        3        :     0011
                " \\-" :        4        :     0100
                " | "  :        5        :     0101
                "###"  :        6        :     0110
                "   "  :        7        :     0111
                " . "  :        8        :     1000
                " * "  :        9        :     1001
                " A "  :       10        :     1010
                " B "  :       11        :     1011

  1.3.1 Runs (optional)
  =========================

  This value is the number of 'runs' of a repeated map item. Similar to Run length encoding (RLE)
  This value will be encoded in binary in 5 bits
  Example: If the map item "---" occurs 5 times consecutively, the binary encoding will be 00101
  The range of this value is from 1-31 (the max length of a quadrant)

1.4 Positions/coordinate system
===============================

Below is a grid showing all the possible positions in a quadrant.
The x value is encoded in a single hexadecimal digit
The y value is encoded in two hexadecimal digits.

   0 1 2 3 4 5 6 7 8 9 A B C D E F 10 11... 2A
  ______________________________________________
0|                                             |
1|                                             |
2|                                             |
3|                                             |
4|                                             |
5|                                             |
6|                                             |
7|                                             |
8|                                             |
9|                                             |
A|                                             |
B|                                             |
C|                                             |
D|                                             |
E|                                             |
F|_____________________________________________|

For example, the position (42, 16) will be encoded as
(0x2A, 0xF) in hexadecimal.


1.5 Direction system
====================

There are 4 directions a pacman or a ghost can go.
They are left, right, bottom and up
They will be encoded in binary as such:

Direction :  Decimal value : Binary value
    Up    :       0        :    0000
   Down   :       1        :    0001
   Left   :       2        :    0010
   Right  :       3        :    0011

1.6 Speed system
================

There are 2 speeds available.
They will be encoded in binary as:

  Action   :  Speed  :  Decimal Value : Binary value
Stationary :    0    :       0        :    0000
  Moving   :    1    :       1        :    0001

1.7 Ghosts
===========

1.7.1 Ghosts Number
===================
A integer in the range 0-3. There are two sets of ghosts. One set belongs to the local computer 
and the other belongs to the remote computer. Each computer controls their respective ghost from their set. For example, 
the local computer cannot control a ghost that was created by the remote computer vice versa. This field is for indicating 
which ghost that exists on the local machine the message refers to on the remote computer.

1.7.2 Ghost Modes
=================
Ranges from 0-2. There are 3 modes that a ghost can exist in.
They are:

Eyes - Only the ghosts eyes will be shown, they will go to their base to come out of eyes mode and will go back to chase mode.
Frighten - The ghost will turn white and move away from the pacman.
Chase - The ghost will be original color and they will move towards the pacman.

The ghost modes will be encoded as such:

   Ghost Mode : Decimal value : Binary value
      Eyes    :      0        :    0000
   Frighten   :      1        :    0001
     Chase    :      2        :    0010



2.0 Sending the Maze during first connection
============================================

A maze needs to be of size 81 x 34 in order to be imported.

Once a successful connection between each computer has been established, a random computers
maze is chosen. That maze is split up into 4 quadrants as specified in 1.2.

The starting x and y position of the map item is also sent using the position system in 1.4.

INITIALIZSE messages consist of 26 bits, encoded as follows:

 0 1 2 3 |    4     |     5     6     | 7 8 9 10 | 11 12 13 14 15 | 16 17 18 19 20 21 | 22 23 24 25  
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
|  Type  | Priority | Quadrant Number | Map item |      Runs      |     X-Position    |  Y-Position  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

Fields:
    - Type: 4 bit type field. Type=INITIALISE has decimal value 0
    - Priority: Priority Type 1 bit unsigned integer
    - Quadrant Number: 2 bit binary value.
    - Map item: 4 bit binary value
    - Runs: 5 bit binary value
    - X-Position: 6 bit binary value (converted from hex)
    - Y-Postion: 4 bit binary value (converted from hex)
    

The contents of the initialise message are:
- Type: INITIALISE
- Priority level: 0. This priority level ensures that the message will be delievered reliably. see 1.1.1
- Quadrant Number: Integer in range 0 to 3 where 0 is the top left.
- Map Item: Decimal value indicating which map item. see 1.3
- Runs: Decimal value indicating how much of the map item it should add on that line. see 1.3.1
- X-Position: Contains the items x position value in hexadecimal. It is of the format 0x(__)
- Y-Position: Contains the itmes y position value in hexadecimal. It is of the format 0x(_)

This message MUST be sent using TCP protocol as it is reliable and it will
make sure there is no packet loss. Only after it recieves the every quadrant,
the game will begin.


Message Encoding and Contents
=============================

NOTE: Sequence numbers haven't been included this part of the encoding.
      See 1.1.2 and 1.1.3 for their encoding.

FOREIGN_PACMAN_ARRIVED
----------------------

FOREIGN_PACMAN_ARRIVED messages consist of 5 bits, encoded as follows:

 0 1 2 3  |     4     |
+-+-+-+-+-+-+-+-+-+-+-+
|  Type   | Priority  |
+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=FOREIGN_PACMAN_ARRIVED has decimal value 1
    - Priority: Priority Type 1 bit unsigned integer

The contents of a FOREIGN_PACMAN_ARRIVED message are:
- Type: FOREIGN_PACMAN_ARRIVED
- Priority: This value MUST be 0. see 1.1.1
Note: This message acts as a notification and notifies if a foreign pacman has arrived on
the local computer.

FOREIGN_PACMAN_LEFT
-------------------
FOREIGN_PACMAN_LEFT messages consist of 5 bits, encoded as follows:

 0 1 2 3  |     4     |
+-+-+-+-+-+-+-+-+-+-+-+
|  Type   | Priority  |
+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 5 bit type field. Type=FOREIGN_PACMAN_LEFT has decimal value 2
    - Priority: 1 bit unsigned integer

The contents of a FOREIGN_PACMAN_LEFT message are:
- Type: FOREIGN_PACMAN_LEFT
- Priority: MUST be 0. This priority level ensures that the message will be delivered reliably. see 1.1.1
Note: This message acts as a notification and is sent after a game is completed successfully

FOREIGN_PACMAN_DIED
-------------------
FOREIGN_PACMAN_DIED messages consist of 5 bits, encoded as follows:

 0 1 2 3 |     4    |
+-+-+-+-+-+-+-+-+-+-+
| Type  | Priority  |
+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=FOREIGN_PACMAN_DIED has decimal value 3
    - Priority: Priority Type 1 bit unsigned integer

The contents of a FOREIGN_PACMAN_DIED message are:
- Type: FOREIGN_PACMAN_DIED
- Priority: This value MUST be 0. see 1.1.1
Note: This message acts a notification and notifies the local machine if a foreign pacman has died.

PACMAN_GO_HOME
--------------
PACMAN_GO_HOME messages consist of 5 bits, encoded as follows:

 0 1 2 3 |     4    |
+-+-+-+-+-+-+-+-+-+-+
| Type  | Priority  |
+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=PACMAN_GO_HOME has decimal value 4
    - Priority: Priority Type 1 bit unsigned integer


The contents of a PACMAN_GO_HOME message are:
- Type: PACMAN_GO_HOME
- Priority: This value MUST be 0. see 1.2.1

PACMAN_UPDATE
-------------
PACMAN_UPDATE messages consist of 20 bits, encoded as follows:

 0 1 2 3  |    4     |    5      6     | 7 8 9 10 11 12 | 13 14 15 16 |   17  18  |   19  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Type   | Priority | Quadrant Number |   X-Position   |  Y-Position | Direction | Speed |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=PACMAN_UPDATE has decimal value 5
    - Priority: Priority Type 1 bit unsigned integer
    - Quadrant Number: 2 bit binary value.
    - X-Position: 6 bit binary value (converted from hex)
    - Y-Postion: 4 bit binary value (converted from hex)
    - Direction: 2 bit binary value
    - Speed: 1 bit binary value

The contents of a PACMAN_UPDATE message are:
- Type: PACMAN_UPDATE
- Priority: This value MUST be 1. see 1.2.1
- Quadrant Number: Ranges from 0 - 3. see 1.3
- X-Position: A hexadecimal from 0-2A see 1.5
- Y-Position: A hexadecimal from 0-F see 1.5
- Direction: Ranges from 0 - 3. see 1.5
- Speed: Depending on users action this value could be a 0 or 1. see 1.6

GHOST_UPDATE
------------
GHOST_UPDATE messages consist of 25 bits, encoded as follows:

 0 1 2 3 |    4    |     5     6     |    7   8  | 9 10 11 12 13 14 | 15 16 17 18 |   19  20  |   21  | 22 23 24 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type  | Priority | Quadrant Number | Ghost Num |    X-Position    |  Y-Position | Direction | Speed |   Mode  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=GHOST_UPDATE has decimal value 6
    - Priority: Priority Type 1 bit unsigned integer
    - Quadrant Number: 2 bit binary value.
    - GhostNum: 2 bit binary value.
    - X-Position: 6 bit binary value (converted from hex)
    - Y-Postion: 4 bit binary value (converted from hex)
    - Direction: 2 bit binary value
    - Speed: 1 bit binary value
    - Mode: 3 bit binary value

The contents of a GHOST_UPDATE message are:
- Type: GHOST_UPDATE
- Priority: This value MUST be 1. see 1.2.1
- Quadrant Number: Ranges from 0 - 3. see 1.3
- GhostNum:  A integer in the range 0-3 see 1.7.1
- X-Position: A hexadecimal from 0-2A see 1.5
- Y-Position: A hexadecimal from 0-F see 1.5
- Direction: Ranges from 0 - 3. see 1.5
- Speed: Depending on users action this value could be a 0 or 1. see 1.6
- Mode: Ranges from 0-2. There are 3 modes that a ghost can exist in. see 1.7.2
Note: During the first run, this message MUST display each ghost correctly. 

FOREIGN_PACMAN_ATE_GHOST
------------------------
FOREIGN_PACMAN_ATE_GHOST messages consist of 7 bits, encoded as follows:

 0 1 2 3 |    4    |      5    6    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type  | Priority |   Ghost Number | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=FOREIGN_PACMAN_ATE_GHOST has decimal value 7
    - Priority: Priority Type 1 bit unsigned integer
    - GhostNum: 2 bit binary value.



The contents of a FOREIGN_PACMAN_ATE_GHOST message are:
- Type: FOREIGN_PACMAN_ATE_GHOST
- Priority: This value MUST be 0. see 1.2.1
- GhostNum: A integer in the range 0-3 see 1.7.1

EAT
---
EAT messages consist of 21 bits, encoded as follows:

 0 1 2 3 |     4   |      5     6    | 7 8 9 10 11 12 | 13 14 15 16 |   17   18 |   19   20   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Type  | Priority | Quadrant Number |   X-Position  |  Y-Position | IsForeign | IsPowerpill | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=EAT has decimal value 8
    - Priority: Priority Type 1 bit unsigned integer
    - Quadrant Number: 2 bit binary value.
    - X-Position: 6 bit binary value (converted from hex)
    - Y-Postion: 4 bit binary value (converted from hex)
    - IsForeign 2 bit binary value
    - IsPowerpill: 2 bit binary value

The contents of a EAT message are:
- Type: EAT
- Priority: This value MUST be 0. see 1.2.1
- Quadrant Number: Ranges from 0 - 3. see 1.3
- X-Position: A hexadecimal from 0-2A see 1.5
- Y-Position: A hexadecimal from 0-F see 1.5
- IsForeign: Decimal value that is either 0 or 1. 0 if the food was on local machine or 1 if the food was on remote machine
- IsPowerpill: Decimal value that is either 0 or 1. 0 if the food is not a powerpill or 1 if the food is a powerpill.

SCORE_UPDATE
------------
SCORE_UPDATE messages consist of 21 bits, encoded as follows:

 0 1 2 3 |    4    | 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type  | Priority |                   Score                    | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=SCORE_UPDATE has decimal value 9
    - Priority: Priority Type 1 bit unsigned integer
    - Score: 16 bit binary value.

The contents of a SCORE_UPDATE message are:
- Type: SCORE_UPDATE
- Priority: This value MUST be 1. see 1.2.1
- Score: Decimal value. Represents the current score of the local player

LIVES_UPDATE
------------
LIVES_UPDATE messages consist of 8 bits, encoded as follows:

 0 1 2 3 |     4    | 5 6 7 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type  | Priority |  Lives | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=LIVES_UPDATE has decimal value 10
    - Priority: Priority Type 1 bit unsigned integer
    - Lives: 3 bit binary value

The contents of a LIVES_UPDATE message are:
- Type: LIVES_UPDATE
- Priority: This value MUST be 0. see 1.2.1
- Lives: Decimal value in range 0-4. Represents the number of lives of the local player

STATUS_UPDATE
-------------
STATUS_UPDATE messages consist of 8 bits, encoded as follows:

 0 1 2 3 |    4    |  5 6 7 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type | Priority |  Status | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:
    - Type: 4 bit type field. Type=LIVES_UPDATE has decimal value 10
    - Priority: Priority Type 1 bit unsigned integer
    - Status: 3 bit binary value
The contents of a STATUS_UPDATE message are:
- Type: STATUS_UPDATE
- Priority: This value MUST be 0. see 1.2.1
- Status: There are 5 status'. They will be represented in decimal and will have binary encoding.

     Status        |  Decimal Value |   Binary Value
     STARTUP       |       0        |       000
     CHASE         |       1        |       001
     FRIGHTEN      |       2        |       010
     GAME_OVER     |       3        |       111
  NEXT_LEVEL_WAIT  |       4        |       100
  READY_TO_RESTART |       5        |       101


Message Timing
===============

While the Pacman is moving, the message types relating to the maze and the pacman
should be sent every 20ms. If the computer cannot maintain 50 frames per second, the messages
MAY be sent once per frame.










